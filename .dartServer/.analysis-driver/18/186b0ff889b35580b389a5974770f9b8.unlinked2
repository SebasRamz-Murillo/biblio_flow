ÄçmagnifierConfiguration	focusNodechildcontextMenuBuilderselectionControlsonSelectionChangedgetSelectableButtonItemscreateState_actions_gestureRecognizers_selectionOverlay_startHandleLayerLink_endHandleLayerLink_toolbarLayerLink_selectionDelegate_selectable_hasSelectionOverlayGeometry_lastOrientation_lastSelectedContentlastSecondaryTapDownPosition	initStatedidChangeDependenciesdidUpdateWidget_makeOverridable_handleFocusChanged_updateSelectionStatus_initMouseGestureRecognizer_initTouchGestureRecognizer_startNewMouseSelectionGesture_handleMouseDragStart_handleMouseDragUpdate_updateSelectedContentIfNeeded_handleMouseDragEnd_handleTouchLongPressStart_handleTouchLongPressMoveUpdate_handleTouchLongPressEnd_handleRightClickDown_selectionEndPosition_userDraggingSelectionEnd _scheduledSelectionEndEdgeUpdate_triggerSelectionEndEdgeUpdate_onAnyDragEnd_stopSelectionEndEdgeUpdate_selectionStartPosition_userDraggingSelectionStart"_scheduledSelectionStartEdgeUpdate _triggerSelectionStartEdgeUpdate_stopSelectionStartEdgeUpdate!_selectionStartHandleDragPosition_selectionEndHandleDragPosition$_handleSelectionStartHandleDragStart%_handleSelectionStartHandleDragUpdate"_handleSelectionEndHandleDragStart#_handleSelectionEndHandleDragUpdate_buildInfoForMagnifier_createSelectionOverlay_updateSelectionOverlay_showHandles_showToolbar_selectEndTo_selectStartTo_selectWordAt_finalizeSelection_clearSelection_copycontextMenuAnchors_adjustingSelectionEnd!_determineIsAdjustingSelectionEnd_granularlyExtendSelection_directionalHorizontalBaseline_directionallyExtendSelectioncontextMenuButtonItemsstartGlyphHeightendGlyphHeightselectionEndpoints
cutEnabledpasteEnabledhideToolbar	selectAllcopySelectiontextEditingValuebringIntoViewcutSelectionuserUpdateTextEditingValue	pasteTextaddremovedisposebuildinvokeActioninvokestategranularity_hasReceivedStartEvent_hasReceivedEndEvent"_lastStartEdgeUpdateGlobalPosition _lastEndEdgeUpdateGlobalPosition#_updateLastEdgeEventsFromGeometrieshandleSelectAllhandleSelectWordhandleClearSelectionhandleSelectionEdgeUpdatedispatchSelectionEventToChildensureChildUpdateddidChangeSelectablesselectables$_kSelectionHandleDrawableAreaPaddingcurrentSelectionEndIndexcurrentSelectionStartIndex_startHandleLayer_startHandleLayerOwner_endHandleLayer_endHandleLayerOwner_isHandlingSelectionEvent_scheduledSelectableUpdate_selectionInProgress
_additions_extendSelectionInProgresslayoutDidChange_scheduleSelectableUpdate_updateSelectables_flushAdditions_removeSelectablevalue_selectionGeometry_updateSelectionGeometrycompareOrder_compareScreenOrder_compareVertically_compareHorizontally_handleSelectableGeometryChangegetSelectionGeometry-_adjustSelectionIndexBasedOnSelectionGeometrypushHandleLayers_updateHandleLayersAndOwnersgetSelectedContenthandleGranularlyExtendSelection"handleDirectionallyExtendSelectiondispatchSelectionEvent_initSelection_adjustSelection_kLongPressSelectionDevicesSelectableRegionSelectableRegionState_NonOverrideAction_SelectAllAction_CopySelectionAction _GranularlyExtendSelectionAction%_GranularlyExtendCaretSelectionAction(_DirectionallyExtendCaretSelectionAction"_SelectableRegionContainerDelegate)MultiSelectableSelectionContainerDelegate"SelectableRegionContextMenuBuilderÅ^SetPointerDeviceKindtouchstylusinvertedStylusTextSelectionAreamaterial
SelectableSelectionContainerSelectionEventSelectionRegistrarScopedelegateSelectionRegistrarmaybeOfSelectionRegistrantdisabledWidgetTesterdragFrom	GlobalKeySelectionHandlerStatefulWidgetTextMagnifierConfiguration	FocusNodeWidgetemptyTextSelectionControlsTextSelectionControlsValueChangedSelectedContentContextMenuButtonItemcontextMenuButtonItemsEditableTextgetEditableButtonItemsAdaptiveTextSelectionToolbarbuttonItemsgetAdaptiveButtonsListSelectionGeometryVoidCallbackboolselectionGeometryhasSelection
hasContent	onPressedonCopytypeContextMenuButtonTypecopyonSelectAll	selectAlloverrideStateTextSelectionDelegateMapTypeActionIntentSelectAllTextIntentCopySelectionTextIntent6ExtendSelectionToNextWordBoundaryOrCaretLocationIntentgranularityTextGranularityword'ExpandSelectionToDocumentBoundaryIntentdocument ExpandSelectionToLineBreakIntentline ExtendSelectionByCharacterIntent	character'ExtendSelectionToNextWordBoundaryIntent ExtendSelectionToLineBreakIntent-ExtendSelectionVerticallyToAdjacentLineIntent'ExtendSelectionToDocumentBoundaryIntentGestureRecognizerFactorySelectionOverlay	LayerLinkvaluestartSelectionPointendSelectionPointOrientationOffsetvoid	initStatewidget	focusNodeaddListenerTapGestureRecognizer$GestureRecognizerFactoryWithHandlers
debugOwnerinstanceonTaponSecondaryTapDowndidChangeDependenciesdefaultTargetPlatformTargetPlatformandroidiOSfuchsialinuxmacOSwindows
MediaQueryofcontextorientationdidUpdateWidgetremoveListenerhasFocusoverridabledefaultActionkIsWeb#PlatformSelectableRegionContextMenudetachattachTextSelectionstatusSelectionStatusuncollapsed	collapsed
baseOffsetextentOffsetnoneoffsetTextEditingValuetext	selectiondisposePanGestureRecognizersupportedDevicesmouseonDownonStartonUpdateonEndonCanceldragStartBehaviorDragStartBehaviordownLongPressGestureRecognizeronLongPressStartonLongPressMoveUpdateonLongPressEndonLongPressCancelDragDownDetailsrequestFocusDragStartDetailsglobalPositionDragUpdateDetails
continuous	plainTextgetSelectedContentonSelectionChangedcallDragEndDetailsLongPressStartDetailsHapticFeedbackselectionClickLongPressMoveUpdateDetailsLongPressEndDetailsTapDownDetailslocationSelectionEdgeUpdateEventSelectionResultpendingdispatchSelectionEventforEndSchedulerBindingaddPostFrameCallbackDurationselectionControlsTextSelectionHandleControlshideMagnifiershowToolbarcontextMenuBuilderBuildContextforStartlocalPositionMatrix4getTransformToMatrixUtilstransformPointshowMagnifierdelta
lineHeightupdateMagnifierMagnifierInfoSelectionPointVector3getTranslationxyRectfromLTWHdxdyglobalGesturePosition	caretRectfieldBoundssizecurrentLineBoundariesdebugRequiredForstartHandleType
handleTypeTextSelectionHandleTypeleftlineHeightAtStartonStartHandleDragStartonStartHandleDragUpdateonStartHandleDragEndendHandleTyperightlineHeightAtEndonEndHandleDragStartonEndHandleDragUpdateonEndHandleDragEndselectionEndpointsselectionDelegateclipboardStatusstartHandleLayerLinkendHandleLayerLinktoolbarLayerLinkmagnifierConfigurationshowHandlesOverlaytoolbarLocationhideToolbarSelectWordSelectionEventClearSelectionEventFuture	ClipboardsetDataClipboardDataTextSelectionToolbarAnchorsprimaryAnchor	RenderBoxfindRenderObjectfromSelection	renderBoxstartGlyphHeightendGlyphHeightGranularlyExtendSelectionEventforwardisEnddouble!DirectionallyExtendSelectionEvent	directionSelectionExtendDirectionnextLinepreviousLinegetSelectableButtonItemsEditableTextStateTextSelectionPointTextDirectionltr
DeprecatedhideHandlesSelectionChangedCauseSelectAllSelectionEventcausetoolbarTextPositionpushHandleLayersdebugCheckHasOverlay	registrarchildCompositedTransformTargetlinkRawGestureDetectorgesturesbehaviorHitTestBehaviortranslucentexcludeFromSemanticsActionsactionsFocusincludeSemanticsContextActionObjectcallingActioninvokekeyboard_copyDirectionalTextEditingIntent_granularlyExtendSelectionDirectionalCaretMovementIntentcollapseSelection_directionallyExtendSelectionremovecurrentSelectionStartIndexselectablescurrentSelectionEndIndexhandleSelectAlladd
selectablehandleSelectWordhandleClearSelectionclearSelectionEventTypeendEdgeUpdatehandleSelectionEdgeUpdatestartEdgeUpdate
selectWordgranularlyExtendSelectiondirectionallyExtendSelectiondispatchSelectionEventToChildtoSetremoveWherecontainsdidChangeSelectablesSelectionContainerDelegateChangeNotifier	protectedint
isNotEmptytoListsortlengthmaxminindexOfremoveAtmustCallSupernotifyListeners
ComparatortransformRectwidthheighttopprecisionErrorTolerancebottomabsisEmptygetTransformFromisFinitecontainerSizeinflateStringBufferwritetoStringindexwheretargetforEachendpreviousnextbackwardcopyWithEditableTextContextMenuBuilder	StatefulWidgetStateTextSelectionDelegateSelectionRegistrarContextAction_NonOverrideAction)MultiSelectableSelectionContainerDelegateSelectionContainerDelegateChangeNotifieräŸÍê∫'üBıFó5≈»    Ä¶  	dart:math  Äª  package:flutter/foundation.dart  ÄÂ  package:flutter/gestures.dart  Å  package:flutter/rendering.dart  Å6  package:flutter/scheduler.dart  Å_  package:flutter/services.dart  Åá  'package:vector_math/vector_math_64.dart  Å∫  actions.dart  Å—  
basic.dart  ÅÊ  context_menu_button_item.dart  Ç  
debug.dart  Ç#  focus_manager.dart  Ç@  focus_scope.dart  Ç[  framework.dart  Çt  gesture_detector.dart  Çî  magnifier.dart  Ç≠  media_query.dart  Ç»  overlay.dart  Çﬂ  ,platform_selectable_region_context_menu.dart  É  selection_container.dart  É9  text_editing_intents.dart  É]  text_selection.dart  É{  #text_selection_toolbar_anchors.dart    	dart:core¿ |ì ¿Hjàó <ÄÜÄ§Ä•ÄπÄ∫Ä‰ÅÅ5Å^ÅÜÅ∏ÅπÅ–ÅÂÇÇ"Ç?ÇZÇsÇìÇ¨Ç«ÇﬁÉÉ8É\ÉzÉ®É©É¡ÉËÉˇÑ ÑPÑkÑáÑ´ÑÆÑØÑÈÑÌÖ:ÖäÖ⁄Ü&ÜmÜΩÜ„ÜÁá6á`ádá¨á¯àEàìàóà√à«ââNâRâ£âÊäääPäöäÈã8ãâã◊åååXå¶åÏç<çZç^ç©ç›é!é0é4ébéfézé~éäéõéπéÛè0èIèçèßèÕêêMê\êiêtê}êÉêãêõêüê£ê»êÌëë0ëSëwëúë¬ëÚííIíuí¢í◊ìììì7ì;ìãìÕìÂìÈî3îÄî∑îªï
ïUï†ïøï√ï◊ñ#ñ@ñDñüñØñ≥ñ…ñÕóóióßó´óøòòQòUò¥òƒò»ôôaôÑôàôúôÍôÓöVöföjö¥õõVõ§õ®õµõπú
ú[úàúåúòú¸ùùùùVùÉù÷ùÒûAûèû®ûˆüCüsü°üßüı††2†A†^†{†††π° °°#°$°n°t°£°©°˙¢ ¢L¢á¢à¢∑¢‘¢’£££C£Y£Z£ô£Ÿ£⁄§#§2§8§Ç§¡§Ú§Û•#•_•`•¨•’•€¶+¶G¶M¶]¶c¶´¶Ìß>ßxß…ß˛®2®Ö®Œ©©F©n©õ©¢©€™™™i™Ø™¬™Ê™˘´´5´a´l´Ñ´£´≈´ˆ¨¨¨¨¨¨[¨]¨^¨Ç¨˘≠C≠Ü≠—Æ¢ØYØ˛∞≠±e≤≤≥≥o≥t≥u≥€¥¥9¥n¥°µµWµrµsµ”∂2∂3∂T∂}∂~∂À∂Û∂Ù∑ ∑∑,∑c∑Ü∑©∑«∏3∏k∏ó∏¡∏˛ππππππ@πcπàπ´π πŸπ¸∫∫>∫a∫q∫w∫x∫√ªª/ªUªcªiªîª∫ª˛ººº	ººJºpº£º‚ΩΩbΩÅΩâΩèΩìΩîΩﬁæ0æ4æ5æTæzæéæ÷æﬁæ˜æ˝øøUø[ø_ø`øÇø•øÊ¿ @¿ @,¿ @R¿ @õ¿ @™¿ @À¿ A	¿ A¿ A¿ Ai¿ Aë¿ A≤¿ Aø¿ A„¿ B¿ B	¿ B¿ B¿ B¿ B¿ BE¿ B±¿ C*¿ CV¿ Cg¿ Cõ¿ C«¿ Cı¿ D¿ DD¿ D|¿ DÖ¿ Då¿ Dê¿ Dë¿ D∏¿ E0¿ Eù¿ Eœ¿ E‡¿ F¿ F^¿ Fî¿ F≈¿ FŒ¿ F’¿ FŸ¿ F⁄¿ G¿ G@¿ GS¿ Gj¿ Gn¿ Go¿ G®¿ G‹¿ G‡¿ G·¿ H¿ H`¿ Hd¿ He¿ Hè¿ HÍ¿ I*¿ Ig¿ Im¿ Iq¿ Ir¿ Iß¿ I¡¿ IÁ¿ IÎ¿ IÏ¿ J/¿ JT¿ Jy¿ J¨¿ J¿¿ J‘¿ J˙¿ J˛¿ Jˇ¿ KL¿ K~¿ KÇ¿ KÉ¿ K¬¿ K‹¿ L¿ L¿ L¿ L>¿ Ly¿ Lû¿ L—¿ LÂ¿ M¿ M?¿ MC¿ MD¿ Mj¿ Mk¿ Må¿ M”¿ N¿ N¿ NK¿ NQ¿ N¢¿ NÛ¿ O%¿ OO¿ Oõ¿ OÍ¿ P9¿ PÅ¿ PÀ¿ PŸ¿ Pﬂ¿ Q¿ Q{¿ Q™¿ Qˆ¿ R'¿ R9¿ RC¿ Ru¿ Rü¿ R©¿ R∑¿ RΩ¿ R¿¿ R¡¿ RÔ¿ S2¿ SZ¿ SÄ¿ Så¿ Sµ¿ S⁄¿ T¿ TI¿ TS¿ T[¿ T`¿ TÉ¿ T§¿ T»¿ TÀ¿ TÃ¿ TÛ¿ U!¿ UC¿ UG¿ UH¿ Uk¿ U∂¿ UÈ¿ UÍ¿ V2¿ V8¿ Vâ¿ V⁄¿ W¿ W8¿ WÑ¿ W”¿ X"¿ Xj¿ X∏¿ X∆¿ XÃ¿ X˘¿ Yl¿ Yù¿ YÈ¿ Z¿ Z.¿ Z8¿ Zl¿ Zò¿ Z¢¿ Z∞¿ Z∂¿ Z∫¿ Zª¿ Z‰¿ [¿ [6¿ [:¿ [;¿ [a¿ [b¿ [ì¿ [¬¿ [√¿ \¿ \M¿ \N¿ \¨¿ \Û¿ ]W¿ ]X¿ ]ï¿ ]≥¿ ]Ë¿ ]¿ ]Ù¿ ]ı¿ ^?¿ ^ö¿ ^‰¿ _-¿ _∏¿ _‡¿ _·¿ ` ¿ `>¿ `s¿ `{¿ `¿ `Ä¿ `∆¿ a¿ ab¿ a©¿ b¿ b¿ bI¿ bg¿ bö¿ b¢¿ b¶¿ bß¿ bÔ¿ cF¿ cê¿ cŸ¿ d^¿ dÑ¿ dÖ¿ dƒ¿ d‚¿ e¿ e¿ e!¿ e"¿ eà¿ e‚¿ f=¿ fß¿ f”¿ f¸¿ gA¿ gL¿ gn¿ gw¿ gx¿ gî¿ g ¿ gË¿ h*¿ hv¿ h¿ hÉ¿ hÑ¿ hß¿ h—¿ hˆ¿ i¿ i
¿ iZ¿ i¶¿ i–¿ iË¿ j¿ jR¿ jë¿ j’¿ k¿ kF¿ kç¿ k ¿ l
¿ lL¿ lu¿ l£¿ l÷¿ lı¿ m¿ mE¿ mt¿ mü¿ m€¿ m‚¿ mÊ¿ mÁ¿ n
¿ n/¿ n=¿ nC¿ nm¿ nΩ¿ o	¿ o ¿ ol¿ o≠¿ oˆ¿ p5¿ pf¿ pj¿ pk¿ pé¿ pî¿ pﬂ¿ pÏ¿ q¿ q)¿ qQ¿ qd¿ qj¿ qk¿ qî¿ q®¿ qÆ¿ qØ¿ qŒ¿ qÙ¿ r¿ r	¿ r
¿ r2¿ r8¿ rÉ¿ r”¿ s ¿ s1¿ s7¿ sà¿ s≤¿ s¯¿ t¿ t¿ t¿ td¿ tØ¿ t˛¿ uJ¿ u\¿ up¿ uv¿ uw¿ uú¿ uΩ¿ u√¿ uƒ¿ u˜¿ v;¿ vc¿ vv¿ v|¿ v}¿ v£¿ v§¿ v»¿ v‡¿ w¿ wM¿ wV¿ w]¿ wn¿ wr¿ ws¿ w∂¿ wº¿ x
¿ x\¿ x§¿ x™¿ xÓ¿ y,¿ y2¿ y|¿ yÀ¿ z¿ z9¿ z?¿ zr¿ zx¿ z•¿ z´¿ zª¿ {¿ {G¿ {Ü¿ {Ã¿ |¿ |M¿ |d¿ |»¿ |÷¿ |‹¿ }¿ }-¿ }U¿ }[¿ }_¿ }`¿ }•¿ }´¿ }˘¿ ~K¿ ~ì¿ ~ô¿ ~ﬂ¿ ¿ #¿ m¿ º¿ Ä¿ Ä*¿ Ä0¿ Äc¿ Äi¿ Äñ¿ Äú¿ Ä¨¿ ÄÔ¿ Å4¿ Ås¿ Åπ¿ ÅÒ¿ Ç<¿ ÇS¿ Çπ¿ Ç«¿ ÇÕ¿ Ç˙¿ É"¿ ÉL¿ ÉR¿ ÉV¿ ÉW¿ Éå¿ Éí¿ Éﬂ¿ Ñ+¿ Ñw¿ Ñ}¿ Ñœ¿ Ñˆ¿ Ñ¸¿ Ö¿ ÖS¿ Öñ¿ Ö€¿ Ü¿ ÜR¿ ÜÉ¿ Ü∞¿ Ü ¿ á%¿ á)¿ á*¿ áU¿ á[¿ á©¿ áÏ¿ áÚ¿ à@¿ àê¿ àŸ¿ àÍ¿ â¿ â+¿ âP¿ âT¿ âU¿ âz¿ âï¿ âØ¿ â⁄¿ â˝¿ äC¿ äi¿ äm¿ än¿ äç¿ ä“¿ äÍ¿ ä¯¿ ä˛¿ ã@¿ ãD¿ ãE¿ ã|¿ ãÇ¿ ãí¿ ãò¿ ãÁ¿ å¿ åM¿ å}¿ åß¿ å›¿ åÊ¿ åÏ¿ ç6¿ çl¿ çà¿ ç≤¿ çÿ¿ é¿ é¿ é¿ é¿ é2¿ ék¿ éï¿ éª¿ é¡¿ é‹¿ è¿ è5¿ èÅ¿ è∫¿ è”¿ ê¿ ê-¿ ê:¿ ê|¿ êÇ¿ êÃ¿ ë¿ ë¿ ë¿ ë[¿ ëÜ¿ ë∏¿ ë∆¿ ëÃ¿ ëı¿ í¿ í5¿ íp¿ íí¿ íõ¿ í¢¿ í¶¿ íß¿ í—¿ í“¿ ì¿ ì9¿ ìG¿ ìM¿ ì£¿ ìÂ¿ î¿ îP¿ îó¿ ï?¿ ïh¿ ïë¿ ïπ¿ ñ!¿ ñL¿ ñU¿ ñ\¿ ñ`¿ ña¿ ñâ¿ ñä¿ ñ÷¿ ñˇ¿ ó¿ ó¿ ó¿ óo¿ óº¿ ò¿ òT¿ ò£¿ òπ¿ ô
¿ ô?¿ ôs¿ ôø¿ ö¿ öJ¿ öÄ¿ ö≥¿ ö∆¿ ö◊¿ öÓ¿ ö˜¿ õ¿ õ$¿ õ;¿ õD¿ õK¿ õO¿ õP¿ õç¿ õ≠¿ õÚ¿ õˆ¿ õ˜¿ ú2¿ úP¿ úì¿ úó¿ úò¿ úÁ¿ ù¿ ùk¿ ù∑¿ ù·¿ û3¿ ûÉ¿ û∫¿ ûﬂ¿ ü ¿ üc¿ ül¿ üy¿ üû¿ ü·¿ †"¿ †+¿ †1¿ †D¿ †H¿ †I¿ †q¿ †≥¿ †ﬂ¿ °¿ °¿ °%¿ °N¿ °á¿ °ã¿ °ó¿ °∑¿ °∏¿ °«¿ °¿ ¢)¿ ¢-¿ ¢9¿ ¢[¿ ¢\¿ ¢h¿ ¢ò¿ ¢æ¿ ¢’¿ ¢˝¿ £¿ £¿ £¿ £¿ £G¿ £^¿ £®¿ £⁄¿ £¿ §¿ §¿ §2¿ §6¿ §7¿ §F¿ §o¿ §®¿ §¨¿ §∏¿ §Ï¿ §˘¿ •¿ •¿ •¿ •$¿ •M¿ •Ü¿ •ä¿ •ñ¿ •ﬂ¿ •‡¿ •Ô¿ ¶¿ ¶Q¿ ¶U¿ ¶a¿ ¶≈¿ ¶∆¿ ¶’¿ ¶˛¿ ß7¿ ß;¿ ßG¿ ßz¿ ßç¿ ßë¿ ßí¿ ß°¿ ß ¿ ®¿ ®¿ ®¿ ®õ¿ ®ú¿ ®´¿ ®‘¿ ©¿ ©¿ ©¿ ©[¿ ©n¿ ©r¿ ©s¿ ©ó¿ ©ò¿ ©§¿ ©»¿ ©È¿ ™¿ ™=¿ ™å¿ ™ê¿ ™ë¿ ™ù¿ ™ƒ¿ ™Î¿ ´$¿ ´S¿ ´k¿ ´o¿ ´p¿ ´|¿ ´è¿ ´»¿ ´˜¿ ¨¿ ¨g¿ ¨°¿ ¨…¿ ¨Î¿ ≠	¿ ≠¿ ≠"¿ ≠#¿ ≠/¿ ≠V¿ ≠Å¿ ≠©¿ ≠¿¿ ≠‰¿ ≠ˇ¿ Æ¿ Æ¿ ÆL¿ Æc¿ Æl¿ Ær¿ Æò¿ Æ∑¿ Æÿ¿ Æˇ¿ Ø.¿ ØR¿ Øj¿ Øá¿ Øü¿ Øƒ¿ ØÌ¿ ∞¿ ∞¿ ∞ ¿ ∞)¿ ∞0¿ ∞4¿ ∞6¿ ∞7¿ ∞Ö¿ ∞â¿ ∞◊¿ ±(¿ ±<¿ ±ã¿ ±∆¿ ±«¿ ±”¿ ≤	¿ ≤*¿ ≤V¿ ≤\¿ ≤Ü¿ ≤ä¿ ≤å¿ ≤ç¿ ≤÷¿ ≤ˆ¿ ≤˜¿ ≥¿ ≥¿ ≥)¿ ≥t¿ ≥©¿ ≥≠¿ ≥Ø¿ ≥∞¿ ¥¿ ¥%¿ ¥&¿ ¥K¿ ¥L¿ ¥X¿ ¥ß¿ ¥∫¿ ¥æ¿ ¥¿¿ ¥¡¿ µ0¿ µ}¿ µ~¿ µ£¿ µ»¿ µ…¿ µ’¿ ∂¿ ∂Q¿ ∂U¿ ∂W¿ ∂X¿ ∂Œ¿ ∑ ¿ ∑!¿ ∑F¿ ∑k¿ ∑l¿ ∑x¿ ∑±¿ ∑’¿ ∏¿ ∏¿ ∏¿ ∏b¿ ∏f¿ ∏h¿ ∏i¿ ∏‚¿ π¿ π¿ π@¿ πA¿ πM¿ πÜ¿ π™¿ π‡¿ πÓ¿ πÙ¿ ∫-¿ ∫1¿ ∫3¿ ∫4¿ ∫ë¿ ∫“¿ ª¿ ª¿ ª@¿ ªl¿ ªm¿ ªy¿ ª†¿ ªœ¿ ª¸¿ º¿ º¿ º¿ ºN¿ ºz¿ º¬¿ Ω¿ Ω_¿ Ω“¿ Ωÿ¿ æ¿ æF¿ æï¿ æÿ¿ øE¿ øK¿ øO¿ øP¿ ø\¿ øü¿ ø‡¿ ¿¿ ¿E¿ ¿q¿ ¿w¿ ¿¡¿ ¿Ï¿ ¿ˇ¿ ¡¿ ¡¿ ¡9¿ ¡j¿ ¡v¿ ¡ª¿ ¡˝¿ ¬)¿ ¬t¿ ¬z¿ ¬§¿ ¬Î¿ ¬Ò¿ √¿ √/¿ √3¿ √4¿ √@¿ √Ñ¿ √ ¿ √Ó¿ ƒ¿ ƒ?¿ ƒl¿ ƒ¿ ƒÉ¿ ƒÑ¿ ƒê¿ ƒﬁ¿ ≈¿ ≈W¿ ≈d¿ ≈•¿ ≈´¿ ≈ﬁ¿ ≈‚¿ ≈„¿ ≈Ô¿ ∆¿ ∆&¿ ∆H¿ ∆]¿ ∆a¿ ∆b¿ ∆n¿ ∆Õ¿ ∆Á¿ «¿ «F¿ «n¿ «}¿ «™¿ «ÿ¿ » ¿ »¿ »4¿ »g¿ »ò¿ »ß¿ »–¿ »˙¿ …	¿ …B¿ …~¿ …Æ¿ …‹¿  ¿  ¿  ¿  \¿  `¿  a¿  m¿  †¿  ¸¿ ÀU¿ Àê¿ Àô¿ À≈¿ À˙¿ Ã¿ Ã=¿ ÃC¿ Ã£¿ Ã˛¿ Õ=¿ ÕF¿ Õt¿ Õ©¿ Õ±¿ ÕÏ¿ ÕÚ¿ Õˆ¿ Õ˜¿ Œ¿ Œ#¿ ŒW¿ Œx¿ Œ°¿ Œﬁ¿ ŒÈ¿ ŒÚ¿ Œ¯¿ œ.¿ œO¿ œz¿ œπ¿ œƒ¿ œÕ¿ œ”¿ –¿ –x¿ –‡¿ —¿ —¿ —¿ —	¿ —O¿ —S¿ —°¿ —Ó¿ “¿ “¿ “c¿ “°¿ ”¿ ”Q¿ ”Ç¿ ”É¿ ”–¿ ”‹¿ ”‚¿ ‘0¿ ‘Ä¿ ‘õ¿ ‘°¿ ‘Á¿ ’ ¿ ’&¿ ’k¿ ’≠¿ ’Æ¿ ’Ò¿ ’˛¿ ÷#¿ ÷$¿ ÷i¿ ÷v¿ ÷ù¿ ÷û¿ ÷æ¿ ÷‰¿ ◊¿ ◊&¿ ◊'¿ ◊Q¿ ◊|¿ ◊°¿ ◊–¿ ◊—¿ ◊¸¿ ◊˝¿ ÿ	¿ ÿ-¿ ÿ\¿ ÿ|¿ ÿù¿ ÿ°¿ ÿ¢¿ ÿÆ¿ ÿ’¿ ÿ˛¿ Ÿ¿ Ÿ¿ Ÿ5¿ ŸV¿ ŸZ¿ Ÿ[¿ Ÿ¢¿ ŸΩ¿ Ÿ›¿ Ÿ·¿ Ÿ‚¿ ⁄¿ ⁄.¿ ⁄W¿ ⁄£¿ ⁄Œ¿ ⁄‡¿ ⁄Í¿ €¿ €4¿ €>¿ €D¿ €H¿ €I¿ €g¿ €ã¿ €¨¿ €≈¿ €À¿ €Á¿ €Î¿ €Ï¿ ‹¿ ‹`¿ ‹û¿ ‹¿¿ ‹⁄¿ ‹ı¿ ›/¿ ›e¿ ›Ñ¿ ›È¿ ﬁ ¿ ﬁY¿ ﬁ¬¿ ﬁ˝¿ ﬂ1¿ ﬂ;¿ ﬂt¿ ﬂ¶¿ ﬂ∞¿ ﬂÌ¿ ‡	¿ ‡¿ ‡#¿ ‡$¿ ‡u¿ ‡ì¿ ‡‡¿ ·7¿ ·é¿ ·Ω¿ ·≈¿ ‚¿ ‚5¿ ‚N¿ ‚T¿ ‚å¿ ‚√¿ „ ¿ „S¿ „¢¿ „¿ ‰?¿ ‰ä¿ ‰º¿ ‰Ú¿ Â¿ Â¿ Â¿ ÂJ¿ Â§¿ Â€¿ Â¸¿ Ê)¿ ÊN¿ ÊT¿ ÊÉ¿ Ê™¿ Ê∞¿ Ê¿ ÊÙ¿ Êı¿ Á8¿ ÁE¿ ÁV¿ Áv¿ Áñ¿ Áö¿ Áõ¿ Áß¿ Á‹¿ Ë¿ Ë5¿ ËW¿ Ë\¿ Ë]¿ Ë™¿ ËŒ¿ È¿ È7¿ È\¿ Èu¿ È{¿ Èü¿ È£¿ È§¿ È¿ Í¿ Í¿ Í6¿ ÍC¿ ÍÖ¿ ÍÜ¿ Íæ¿ Í¿ Î¿ ÎF¿ ÎM¿ Î¿ Îù¿ Î’¿ Î‹¿ Ï¿ Ï,¿ ÏA¿ ÏG¿ Ïv¿ Ïz¿ Ï{¿ Ï∆¿ Ï◊¿ Ï›¿ Ì'¿ Ìi¿ Ìõ¿ Ó¿ Ók¿ Ó{¿ ÓÅ¿ Óº¿ Ó·¿ ÓÁ¿ Ô¿ Ô¿ Ô¿ Ôe¿ Ô≠¿ Ô≥¿ ÔÚ¿ &¿ å¿ £¿ ¥¿ ∫¿ Ò ¿ Ò7¿ ÒG¿ ÒM¿ Òä¿ Ò±¿ Ò∑¿ Òﬁ¿ Ò‚¿ Ò„¿ Ú¿ Ú_¿ Ú≠¿ Ú˜¿ Û¿ Û*¿ Û0¿ ÛP¿ ÛT¿ ÛU¿ Ûó¿ Û§¿ Û—¿ Û˚¿ Ù'¿ ÙF¿ Ùl¿ Ùå¿ Ù≤¿ Ùﬁ¿ ÙÁ¿ ÙÌ¿ ÙÓ¿ ı¿ ıg¿ ıã¿ ı≠¿ ı∂¿ ˆ¿ ˆ(¿ ˆL¿ ˆU¿ ˆ[¿ ˆ\¿ ˆî¿ ˆÈ¿ ˜C¿ ˜z¿ ˜‚¿ ¯¿ ¯R¿ ¯X¿ ¯Y¿ ¯y¿ ¯Æ¿ ˘¿ ˘~¿ ˘∂¿ ˘“¿ ˘˜¿ ˙¿ ˙\¿ ˙°¿ ˙¨¿ ˙¥¿ ˙∫¿ ˙ª¿ ˙Ò¿ ˚B¿ ˚u¿ ˚Ÿ¿ ¸¿ ¸C¿ ¸I¿ ¸g¿ ¸ò¿ ¸Î¿ ˝\¿ ˝î¿ ˝Æ¿ ˝—¿ ˝Ô¿ ˛0¿ ˛q¿ ˛|¿ ˛Ñ¿ ˛ä¿ ˛ã¿ ˛©¿ ˛–¿ ˛Û¿ ˇ¿ ˇD¿ ˇd¿ ˇó¿ ˇØ¿ ˇ∂¿ ˇ∫¿ ˇª¿ ¿ S¿ °¿ Ó¿=¿Z¿_¿Ø¿¿=¿g¿ª¿„¿È¿¿¿¿¿[¿ß¿µ¿ª¿‡¿¿%¿)¿*¿{¿Å¿“¿¿d¿~¿¶¿ﬂ¿¿Z¿¿¬¿˙¿Ñ¿¿Q¿î¿ö¿Ë¿	¿	1¿	o¿	ñ¿	û¿	»¿
¿
)¿
1¿
?¿
E¿
F¿
ì¿
œ¿
’¿¿X¿^¿_¿•¿¶¿Ë¿¿Q¿´¿π¿ø¿¿¿
¿L¿í¿ñ¿ó¿Œ¿⁄¿¿F¿}¿¬¿‹¿˙¿¿¿&¿9¿?¿o¿©¿“¿ÿ¿Ù¿¿¿#¿$¿S¿`¿£¿⁄¿¿¿<¿s¿î¿ò¿ô¿Œ¿ˇ¿¿Q¿ì¿¿M¿ú¿”¿ ¿b¿û¿Ó¿5¿K¿ì¿¿M¿W¿{¿É¿â¿™¿Æ¿Ø¿ı¿¿F¿}¿µ¿ª¿ﬁ¿¿$¿(¿)¿g¿t¿Œ¿"¿N¿i¿¨¿ª¿¿¿¿x¿’¿Ó¿ ¿w¿ë¿‚¿¿¿+¿Y¿ü¿π¿
¿:¿B¿H¿_¿ç¿ö¿ ¿–¿„¿Á¿Ë¿&¿3¿ì¿Á¿¿3¿g¿ó¿Ì¿˛¿ .¿ ]¿ †¿ ±¿ π¿ ø¿!¿!w¿!ñ¿!»¿"¿"O¿"p¿"é¿"¬¿"Í¿#6¿#E¿#x¿#Ñ¿#é¿#ù¿#À¿$¿$J¿$Ä¿$û¿$“¿$˙¿%E¿%T¿%á¿%ì¿%ù¿%¨¿%Ÿ¿&¿&6¿&E¿&K¿&b¿&ê¿&ù¿&Õ¿&”¿&Ê¿&Í¿&Î¿'¿'¿'i¿'£¿(¿("¿(ù¿(°¿(¢¿(Æ¿(Ô¿)9¿)w¿)≤¿)ÿ¿)ﬁ¿*¿*:¿*[¿*u¿*§¿*—¿*˝¿+L¿+[¿+Ä¿+¨¿+Ò¿, ¿,)¿,U¿,ô¿,®¿,“¿,˛¿-D¿-S¿-å¿-∑¿.¿.!¿.]¿.à¿.È¿.¯¿.˛¿/%¿/E¿/X¿/\¿/]¿/i¿/|¿/≥¿/ı¿/˚¿0#¿0K¿0`¿0d¿0e¿0±¿0∑¿1¿1F¿1L¿1ú¿1∞¿1Ω¿1Ô¿1¿2-¿23¿2Ç¿2∫¿2«¿3&¿3[¿3_¿3`¿3ú¿3¢¿3Û¿4@¿4í¿4€¿5¿5¿5h¿5π¿5∆¿6 ¿6á¿6û¿6¬¿6ﬂ¿77¿7k¿7¬¿7ﬂ¿8¿8%¿8A¿8R¿8t¿8ê¿8∏¿8‹¿8Ì¿9¿98¿9T¿9n¿9ù¿9©¿9”¿9‰¿:
¿:&¿:R¿:v¿:á¿:è¿:ï¿:ñ¿:∞¿:”¿:ˆ¿:¸¿;¿;8¿;E¿;r¿;x¿;ƒ¿<¿<b¿<ç¿<ë¿<í¿<‡¿=&¿=,¿=s¿=ƒ¿>¿>`¿>p¿>É¿>„¿>¯¿? ¿?b¿?u¿?¿?°¿?Û¿@¿@8¿@j¿@∂¿A¿A<¿AC¿Ag¿Aú¿A‹¿B¿Bm¿B ¿BÛ¿C¿C;¿C^¿Cè¿C†¿C√¿CÂ¿D ¿D/¿Dj¿Dù¿D∞¿DÃ¿DÁ¿DÛ¿E¿E+¿EM¿Eh¿Eó¿EΩ¿E¿F¿F ¿F;¿FG¿FX¿F`¿Ff¿Fw¿F¢¿FØ¿F‹¿F‚¿F˚¿Fˇ¿G¿G¿GN¿Gk¿Go¿G}¿GÅ¿GÀ¿G‚¿H ¿H8¿Hg¿Hj    Ä•  Ä∫  Ä‰  Å  Å5  Å^  ÅÜ  Åπ  Å–  ÅÂ  Ç  Ç"  Ç?  ÇZ  Çs  Çì  Ç¨  Ç«  Çﬁ  É  É8  É\  Éz    
ÑØß≠üIöì/// A widget that introduces an area for user selections.
///
/// Flutter widgets are not selectable by default. Wrapping a widget subtree
/// with a [SelectableRegion] widget enables selection within that subtree (for
/// example, [Text] widgets automatically look for selectable regions to enable
/// selection). The wrapped subtree can be selected by users using mouse or
/// touch gestures, e.g. users can select widgets by holding the mouse
/// left-click and dragging across widgets, or they can use long press gestures
/// to select words on touch devices.
///
/// A [SelectableRegion] widget requires configuration; in particular specific
/// [selectionControls] must be provided.
///
/// The [SelectionArea] widget from the [material] library configures a
/// [SelectableRegion] in a platform-specific manner (e.g. using a Material
/// toolbar on Android, a Cupertino toolbar on iOS), and it may therefore be
/// simpler to use that widget rather than using [SelectableRegion] directly.
///
/// ## An overview of the selection system.
///
/// Every [Selectable] under the [SelectableRegion] can be selected. They form a
/// selection tree structure to handle the selection.
///
/// The [SelectableRegion] is a wrapper over [SelectionContainer]. It listens to
/// user gestures and sends corresponding [SelectionEvent]s to the
/// [SelectionContainer] it creates.
///
/// A [SelectionContainer] is a single [Selectable] that handles
/// [SelectionEvent]s on behalf of child [Selectable]s in the subtree. It
/// creates a [SelectionRegistrarScope] with its [SelectionContainer.delegate]
/// to collect child [Selectable]s and sends the [SelectionEvent]s it receives
/// from the parent [SelectionRegistrar] to the appropriate child [Selectable]s.
/// It creates an abstraction for the parent [SelectionRegistrar] as if it is
/// interacting with a single [Selectable].
///
/// The [SelectionContainer] created by [SelectableRegion] is the root node of a
/// selection tree. Each non-leaf node in the tree is a [SelectionContainer],
/// and the leaf node is a leaf widget whose render object implements
/// [Selectable]. They are connected through [SelectionRegistrarScope]s created
/// by [SelectionContainer]s.
///
/// Both [SelectionContainer]s and the leaf [Selectable]s need to register
/// themselves to the [SelectionRegistrar] from the
/// [SelectionContainer.maybeOf] if they want to participate in the
/// selection.
///
/// An example selection tree will look like:
///
/// {@tool snippet}
///
/// ```dart
/// MaterialApp(
///   home: SelectableRegion(
///     selectionControls: materialTextSelectionControls,
///     focusNode: _focusNode, // initialized to FocusNode()
///     child: Scaffold(
///       appBar: AppBar(title: const Text('Flutter Code Sample')),
///       body: ListView(
///         children: const <Widget>[
///           Text('Item 0', style: TextStyle(fontSize: 50.0)),
///           Text('Item 1', style: TextStyle(fontSize: 50.0)),
///         ],
///       ),
///     ),
///   ),
/// )
/// ```
/// {@end-tool}
///
///
///               SelectionContainer
///               (SelectableRegion)
///                  /         \
///                 /           \
///                /             \
///           Selectable          \
///      ("Flutter Code Sample")   \
///                                 \
///                          SelectionContainer
///                              (ListView)
///                              /       \
///                             /         \
///                            /           \
///                     Selectable        Selectable
///                     ("Item 0")         ("Item 1")
///
///
/// ## Making a widget selectable
///
/// Some leaf widgets, such as [Text], have all of the selection logic wired up
/// automatically and can be selected as long as they are under a
/// [SelectableRegion].
///
/// To make a custom selectable widget, its render object needs to mix in
/// [Selectable] and implement the required APIs to handle [SelectionEvent]s
/// as well as paint appropriate selection highlights.
///
/// The render object also needs to register itself to a [SelectionRegistrar].
/// For the most cases, one can use [SelectionRegistrant] to auto-register
/// itself with the register returned from [SelectionContainer.maybeOf] as
/// seen in the example below.
///
/// {@tool dartpad}
/// This sample demonstrates how to create an adapter widget that makes any
/// child widget selectable.
///
/// ** See code in examples/api/lib/material/selectable_region/selectable_region.0.dart **
/// {@end-tool}
///
/// ## Complex layout
///
/// By default, the screen order is used as the selection order. If a group of
/// [Selectable]s needs to select differently, consider wrapping them with a
/// [SelectionContainer] to customize its selection behavior.
///
/// {@tool dartpad}
/// This sample demonstrates how to create a [SelectionContainer] that only
/// allows selecting everything or nothing with no partial selection.
///
/// ** See code in examples/api/lib/material/selection_container/selection_container.0.dart **
/// {@end-tool}
///
/// In the case where a group of widgets should be excluded from selection under
/// a [SelectableRegion], consider wrapping that group of widgets using
/// [SelectionContainer.disabled].
///
/// {@tool dartpad}
/// This sample demonstrates how to disable selection for a Text in a Column.
///
/// ** See code in examples/api/lib/material/selection_container/selection_container_disabled.0.dart **
/// {@end-tool}
///
/// To create a separate selection system from its parent selection area,
/// wrap part of the subtree with another [SelectableRegion]. The selection of the
/// child selection area can not extend past its subtree, and the selection of
/// the parent selection area can not extend inside the child selection area.
///
/// ## Tests
///
/// In a test, a region can be selected either by faking drag events (e.g. using
/// [WidgetTester.dragFrom]) or by sending intents to a widget inside the region
/// that has been given a [GlobalKey], e.g.:
///
/// ```dart
/// Actions.invoke(key.currentContext!, const SelectAllTextIntent(SelectionChangedCause.keyboard));
/// ```
///
/// See also:
///  * [SelectionArea], which creates a [SelectableRegion] with
///    platform-adaptive selection controls.
///  * [SelectionHandler], which contains APIs to handle selection events from the
///    [SelectableRegion].
///  * [Selectable], which provides API to participate in the selection system.
///  * [SelectionRegistrar], which [Selectable] needs to subscribe to receive
///    selection events.
///  * [SelectionContainer], which collects selectable widgets in the subtree
///    and provides api to dispatch selection event to the collected widget. üuÅ≠ ††/Äõ/// Create a new [SelectableRegion] widget.
///
/// The [selectionControls] are used for building the selection handles and
/// toolbar for mobile devices.†6	†=  †E†K  †b†q  ††é  †§†≥  †ΩA†√  °°
  †€†ı†ˆ°&Å_¢oÅ/// {@macro flutter.widgets.magnifier.TextMagnifierConfiguration.intro}
///
/// {@macro flutter.widgets.magnifier.intro}
///
/// By default, [SelectableRegion]'s [TextMagnifierConfiguration] is disabled.
///
/// {@macro flutter.widgets.magnifier.TextMagnifierConfiguration.details} ¢äH¢…,/// {@macro flutter.widgets.Focus.focusNode} ¢◊ÄÄ£Rg/// The child widget this selection area applies to.
///
/// {@macro flutter.widgets.ProxyWidget.child} £\{£≈</// {@macro flutter.widgets.EditableText.contextMenuBuilder} £‹Å§ﬂÄ‹/// The delegate to build the selection handles and toolbar for mobile
/// devices.
///
/// The [emptyTextSelectionControls] global variable provides a default
/// [TextSelectionControls] implementation with no controls. §ıh•K-/// Called when the selected content changes.  •bÜ©®ÛÉK/// Returns the [ContextMenuButtonItem]s representing the buttons in this
/// platform's default selection menu.
///
/// For example, [SelectableRegion] uses this to generate the default buttons
/// for its context menu.
///
/// See also:
///
/// * [SelectableRegionState.contextMenuButtonItems], which gives the
///   [ContextMenuButtonItem]s for a specific SelectableRegion.
/// * [EditableText.getEditableButtonItems], which performs a similar role but
///   for content that is both selectable and editable.
/// * [AdaptiveTextSelectionToolbar], which builds the toolbar itself, and can
///   take a list of [ContextMenuButtonItem]s with
///   [AdaptiveTextSelectionToolbar.buttonItems].
/// * [AdaptiveTextSelectionToolbar.getAdaptiveButtons], which builds the button
///   Widgets for the current platform given [ContextMenuButtonItem]s. ©2©4  ©J"©g  ©r'©è   ¨K¨1   ¨¨ ¨^¿ É◊¨à#/// State for a [SelectableRegion].  ¨˚Üw≠  Äû≠A≥q≠+≠@≠,≠2≠8≠?≠9≠Z≠G≠\≠l≠É≠m≠}≠Ç≠~≠°≠ä≠£≠≥≠Œ≠¥≠»≠Õ≠…Æ≠’ÆÆÆüÆÆ>ÆuÆ?ÆvÆûÆwÆàÆ}ÆäÆôÆöÆÕÆ¶ÆœÆﬂØVÆ‡Ø Ø(ØØ)ØUØ*Ø;Ø0Ø=ØLØMØ}Ø]ØØèØ˚ØêØ∞Ø—Ø±Ø“Ø˙Ø”Ø‰ØŸØÊØıØˆ∞"∞∞$∞4∞™∞5∞Z∞{∞[∞|∞©∞}∞é∞É∞ê∞ü∞†∞ÿ∞±∞⁄∞Í±b∞Î±±8±±9±a±:±K±@±M±\±]±â±i±ã±õ≤±ú±¡±‚±¬±„≤±‰±ı±Í±˜≤≤≤@≤≤B≤R≤∞≤S≤{≤©≤|≤™≤Ø≤´≤ﬁ≤∑≤‡≤≥l≤Ò≥≥>≥≥?≥k≥@≥Q≥F≥S≥b≥c≥wb≥° ≥◊≥ÿ≥∑≥÷≥∏≥æ≥›#≥Ô  ¥3¥ ¥,¥5¥6¥;1¥K ¥a¥j¥k¥p/¥Ä ¥î¥ù¥û¥£b¥Ã ¥·µµµYµe  ∂5∂B  ∂V%∂g  ∂Äq∂’J/// {@macro flutter.rendering.RenderEditable.lastSecondaryTapDownPosition} ¿ Mm¿ Mu  ¿ M’-¿ M⁄ ¿ M˝¿ UJ¿ UR  ¿ U∏/¿ UΩ ¿ U‚¿ [d-¿ [p  ¿ [ï+¿ [°  ¿ é¿ é  ¿ í©&¿ í±  ¿ •Ä∆¿ •© ¿ •¿ •¿ •"¿ •à¿ •(¿ •Q¿ •å¿ •ç¿ •º¿ •¬¿ •“¿ •‹¿ •◊¿ •”¿ •Ÿ
µuÄºµ~    ¿ MéD¿ Mó    ¿ UmH¿ Uv    ¿ ãGÇ…¿ å8Äƒ/// {@macro flutter.widgets.EditableText.getAnchors}
///
/// See also:
///
///  * [contextMenuButtonItems], which provides the [ContextMenuButtonItem]s
///    for the default context menu buttons.   ¿ ñåÑ¬¿ ö1Éd/// Returns the [ContextMenuButtonItem]s representing the buttons in this
/// platform's default selection menu.
///
/// See also:
///
/// * [SelectableRegion.getSelectableButtonItems], which performs a similar role,
///   but for any selectable text, not just specifically SelectableRegion.
/// * [EditableTextState.contextMenuButtonItems], which peforms a similar role
///   but for content that is not just selectable but also editable.
/// * [contextMenuAnchors], which provides the anchor points for the default
///   context menu.
/// * [AdaptiveTextSelectionToolbar], which builds the toolbar itself, and can
///   take a list of [ContextMenuButtonItem]s with
///   [AdaptiveTextSelectionToolbar.buttonItems].
/// * [AdaptiveTextSelectionToolbar.getAdaptiveButtons], which builds the
///   button Widgets for the current platform given [ContextMenuButtonItem]s.   ¿ õRÄ£¿ õö:/// The line height at the start of the current selection.   ¿ õ˘Äù¿ ú?8/// The line height at the end of the current selection.   ¿ úöÉ≠¿ ùL/// Returns the local coordinates of the endpoints of the current selection.   ¿ °Äû¿ °¢   ¿ °¿ °¿ °#¿ °â¿ °)¿ °R¿ °ç¿ °é¿ °∫Ä†¿ ¢D   ¿ °∫¿ °ª¿ °≈¿ ¢+¿ °À¿ °Ù¿ ¢/¿ ¢03∂ˆÇ∑   ∂ˆ∂˜πÇÚπ&   ππºÅáº  º,º>  ººΩñÄùΩ† Ω±Ω±Ω√ΩŒ   æ7Å'æ<    øbÇ™øg    ¿ B Ço¿ B%    ¿ DìÇE¿ Dò    ¿ F‹Äë¿ F·  ¿ G ¿ G   ¿ Gqn¿ Gv  ¿ Gå¿ Gû   ¿ G„ÄÄ¿ GË  ¿ Gˇ¿ H   ¿ HgÅ	¿ Hl    ¿ Itv¿ Iy  ¿ Iç¿ Iù   ¿ IÓÅ¿ IÛ  ¿ J¿ J%   ¿ KÄÄ¿ K  ¿ K&"¿ KB   ¿ KÖÄÄ¿ Kä  ¿ K£¿ K∏   ¿ L	Å9¿ L  ¿ L$¿ L4   ¿ NÑ∏¿ O,Å/// Sends end [SelectionEdgeUpdateEvent] to the selectable subtree.
///
/// If the selectable subtree returns a [SelectionResult.pending], this method
/// continues to send [SelectionEdgeUpdateEvent]s every frame until the result
/// is not pending or users end their gestures.   ¿ R¬Ç¿ R«  ¿ R’¿ RÂ   ¿ TŒx¿ T”    ¿ UÏÑÕ¿ WÅ/// Sends start [SelectionEdgeUpdateEvent] to the selectable subtree.
///
/// If the selectable subtree returns a [SelectionResult.pending], this method
/// continues to send [SelectionEdgeUpdateEvent]s every frame until the result
/// is not pending or users end their gestures.   ¿ ZΩ|¿ Z¬    ¿ [≈Ç.¿ [   ¿ [Ô¿ \   ¿ ]˜Çá¿ ]¸  ¿ ^"¿ ^5   ¿ `ÇÇ#¿ `á  ¿ `™¿ `º   ¿ b©Çw¿ bÆ  ¿ b“¿ bÂ   ¿ e$É^¿ e2  ¿ eI¿ eQ  ¿ eg¿ ew   ¿ hÜÖ_¿ hã    ¿ mÈÇÄ¿ mÓ    ¿ pmÅõ¿ pÛx/// Shows the selection handles.
///
/// Returns true if the handles are shown, false if the handles can't be
/// shown.   ¿ rÖe¿ sèÅm/// Shows the text selection toolbar.
///
/// If the parameter `location` is set, the toolbar will be shown at the
/// location. Otherwise, the toolbar location will be calculated based on the
/// handles' locations. The `location` is in the coordinates system of the
/// [Overlay].
///
/// Returns true if the toolbar is shown, false if the toolbar can't be shown. ¿ sù¿ s¶   ¿ wuÖÈ¿ |Ñ`/// Sets or updates selection end edge to the `offset` location.
///
/// A selection always contains a select start edge and selection end edge.
/// They can be created by calling both [_selectStartTo] and [_selectEndTo], or
/// use other selection APIs, such as [_selectWordAt] or [selectAll].
///
/// This method sets or updates the selection end edge by sending
/// [SelectionEdgeUpdateEvent]s to the child [Selectable]s.
///
/// If `continuous` is set to true and the update causes scrolling, the
/// method will continue sending the same [SelectionEdgeUpdateEvent]s to the
/// child [Selectable]s every frame until the scrolling finishes or a
/// [_finalizeSelection] is called.
///
/// The `continuous` argument defaults to false.
///
/// The `offset` is in global coordinates.
///
/// See also:
///  * [_selectStartTo], which sets or updates selection start edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [_clearSelection], which clear the ongoing selection.
///  * [_selectWordAt], which selects a whole word at the location.
///  * [selectAll], which selects the entire content. ¿ |¿ |*  ¿ |1¿ |7  ¿ |C¿ }bÖÛ¿ Å¯Ñ`/// Sets or updates selection start edge to the `offset` location.
///
/// A selection always contains a select start edge and selection end edge.
/// They can be created by calling both [_selectStartTo] and [_selectEndTo], or
/// use other selection APIs, such as [_selectWordAt] or [selectAll].
///
/// This method sets or updates the selection start edge by sending
/// [SelectionEdgeUpdateEvent]s to the child [Selectable]s.
///
/// If `continuous` is set to true and the update causes scrolling, the
/// method will continue sending the same [SelectionEdgeUpdateEvent]s to the
/// child [Selectable]s every frame until the scrolling finishes or a
/// [_finalizeSelection] is called.
///
/// The `continuous` argument defaults to false.
///
/// The `offset` is in global coordinates.
///
/// See also:
///  * [_selectEndTo], which sets or updates selection end edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [_clearSelection], which clear the ongoing selection.
///  * [_selectWordAt], which selects a whole word at the location.
///  * [selectAll], which selects the entire content. ¿ Ç¿ Ç  ¿ Ç ¿ Ç&  ¿ Ç2¿ ÉYÉœ¿ ÜYÇ‹/// Selects a whole word at the `offset` location.
///
/// If the whole word is already in the current selection, selection won't
/// change. One call [_clearSelection] first if the selection needs to be
/// updated even if the word is already covered by the current selection.
///
/// One can also use [_selectEndTo] or [_selectStartTo] to adjust the selection
/// edges after calling this method.
///
/// See also:
///  * [_selectStartTo], which sets or updates selection start edge.
///  * [_selectEndTo], which sets or updates selection end edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [_clearSelection], which clear the ongoing selection.
///  * [selectAll], which selects the entire content. ¿ Üh¿ Üy   ¿ á,Ç'¿ àÒÅ≠/// Stops any ongoing selection updates.
///
/// This method is different from [_clearSelection] that it does not remove
/// the current selection. It only stops the continuous updates.
///
/// A continuous update can happen as result of calling [_selectStartTo] or
/// [_selectEndTo] with `continuous` sets to true which causes a [Selectable]
/// to scroll. Calling this method will stop the update as well as the
/// scrolling.   ¿ âWÅ¿ âÅ"/// Removes the ongoing selection.   ¿ äpÄ”¿ ä}    ¿ é4Ç÷¿ é9  ¿ é[¿ éa   ¿ ëÅó¿ ë  ¿ ë.¿ ë?  ¿ ëK¿ ëQ   ¿ í‘Éã¿ íŸ  ¿ í˜¿ í˝   ¿ ¢^Ä®¿ ¢o  ¿ ¢|¿ ¢Ç  ¿ ¢^¿ ¢_¿ ¢è¿ £
Å+¿ £  ¿ £&¿ £>  ¿ £
¿ £¿ §9Ä⁄¿ §ø  ¿ §Õ¿ §‰  ¿ §9¿ §:¿ §D¿ §™¿ §J¿ §s¿ §Æ¿ §Ø¿ •‚Ä‚¿ ¶h  ¿ ¶v¿ ¶Ñ  ¿ •‚¿ •„¿ •Ì¿ ¶S¿ •Û¿ ¶¿ ¶W¿ ¶X¿ ¶»Ä»¿ ßN  ¿ ß[¿ ßr  ¿ ¶»¿ ¶…¿ ¶”¿ ß9¿ ¶Ÿ¿ ß¿ ß=¿ ß>¿ ßîÅ¿ ®  ¿ ®5¿ ®G  ¿ ®M¿ ®d  ¿ ßî¿ ßï¿ ßü¿ ®¿ ß•¿ ßŒ¿ ®	¿ ®
¿ ®ûÄ”¿ ©,  ¿ ©6¿ ©M  ¿ ®û¿ ®ü¿ ®©¿ ©¿ ®Ø¿ ®ÿ¿ ©¿ ©¿ ©öÄı¿ ©´  ¿ ©Ø¿ ©ª  ¿ ©ö¿ ©õ¿ ™ìÄ€¿ ™§  ¿ ™´¿ ™∑  ¿ ™ì¿ ™î¿ ´rÅØ¿ ´É   ¿ ´r¿ ´s¿ ≠%É¿ ≠8  ¿ ≠>¿ ≠L  ¿ ≠%¿ ≠& ¿ ∞7ÇT¿ ±KÅ/// An action that does not override any [Action.overridable] in the subtree.
///
/// If this action is invoked by an [Action.overridable], it will immediately
/// invoke the [Action.overridable] and do nothing else. Otherwise, it will call
/// [invokeAction].¿ ±^¿ ±^   ¿ ±ç8¿ ±ï  ¿ ±¢¿ ±•  ¿ ±≠¿ ±º   ¿ ±…Ä¿¿ ±›  ¿ ±‰¿ ±Á  ¿ ±Ô¿ ±˛  ¿ ±…¿ ±  ¿ ≤çÅ!¿ ≤ì  ¿ ≤ÿ ¿ ≤ÿ¿ ≤Ë ¿ ≤È
¿ ≤Ô   ¿ ≤˘!¿ ≥   ¿ ≥Äç¿ ≥0  ¿ ≥=¿ ≥R  ¿ ≥Z¿ ≥i  ¿ ≥¿ ≥  ¿ ≥∞Å¿ ≥∂  ¿ ¥! ¿ ¥¿ ¥ ¿ ¥
¿ ¥   ¿ ¥(!¿ ¥D   ¿ ¥No¿ ¥_  ¿ ¥l¿ ¥Ö  ¿ ¥ç¿ ¥ú  ¿ ¥N¿ ¥O ¿ ¥¡Åï¿ ¥« ¿ ¥Ë&¿ ¥Ë¿ µ2J ¿ µ2¿ µR ¿ µS
¿ µY  ¿ µ`¿ µo   ¿ µÄ!¿ µú  ¿ µ•!¿ µª   ¿ µÀÄâ¿ µ‹  ¿ µÈ¿ µÏ  ¿ µÙ¿ ∂  ¿ µÀ¿ µÃ ¿ ∂XÇ¿ ∂^ ¿ ∂Ñ(¿ ∂Ñ¿ ∂–O ¿ ∂–¿ ∂ı ¿ ∂ˆ
¿ ∂¸  ¿ ∑¿ ∑   ¿ ∑#!¿ ∑?  ¿ ∑H!¿ ∑^   ¿ ∑nÄ˜¿ ∑  ¿ ∑å¿ ∑è  ¿ ∑ó¿ ∑¶  ¿ ∑n¿ ∑o ¿ ∏iÅ…¿ ∏o ¿ ∏ò(¿ ∏ò¿ ∏‰5 ¿ ∏‰¿ π ¿ π
¿ π   ¿ π!¿ π9   ¿ πCÄÌ¿ πT  ¿ πa¿ πd  ¿ πl¿ π{  ¿ πC¿ πD ¿ ∫4ñ”¿ ∫:   ¿ ∫ì=¿ ∫© ¿ ∫Œ¿ ∫œ¿ ∫¬¿ ∫Õ¿ ∫√¿ ∫‘;¿ ∫Í ¿ ª¿ ª¿ ª¿ ª¿ ª¿ ª*¿ ª  ¿ ªB(¿ ªJ   
¿ ªoÄÆ¿ ªÄ  ¿ ªá¿ ªì  ¿ ªo¿ ªp¿ º!É-¿ º&    ¿ øRÅ∞¿ øn  ¿ ø~¿ øó  ¿ øR¿ øS¿ ¡Ç,¿ ¡àa/// Selects a word in a selectable at the location
/// [SelectWordSelectionEvent.globalPosition]. ¿ ¡ô¿ ¡≥  ¿ ¡l¿ ¡m¿ √6ÅL¿ √R  ¿ √g¿ √|  ¿ √6¿ √7¿ ƒÜÅ[¿ ƒ¢  ¿ ƒº¿ ƒ÷  ¿ ƒÜ¿ ƒá¿ ≈Â{¿ ≈ˆ   ¿ ≈Â¿ ≈Ê¿ ∆dÉ˚¿ ∆Ä  ¿ ∆û¿ ∆™  ¿ ∆µ¿ ∆≈  ¿ ∆d¿ ∆e¿  cÉí¿  t  ¿  á¿  ì  ¿  c¿  d¿ Õ˘É¿ Œ
   ¿ Õ˘¿ Õ˙ ¿ —	¿ u˜¿ “∞Åó/// An abstract base class for updating multiple selectable children.
///
/// This class provide basic [SelectionEvent] handling and child [Selectable]
/// updating. The subclass needs to implement [ensureChildUpdated] to ensure
/// child [Selectable] is updated properly.
///
/// This class optimize the selection update by keeping track of the
/// [Selectable]s that currently contain the selection edges.  ¿ ”k¿ ”d;/// Gets the list of selectables this delegate is managing.¿ ”~¿ ”¿ ”r¿ ”}¿ ”s¿ ”ÖÇ&¿ ’ÅÅ—/// The number of additional pixels added to the selection handle drawable
/// area.
///
/// Selection handles that are outside of the drawable area will be hidden.
/// That logic prevents handles that get scrolled off the viewport from being
/// drawn on the screen.
///
/// The drawable area = current rectangle of [SelectionContainer] +
/// _kSelectionHandleDrawableAreaPadding on each side.
///
/// This was an eyeballed value to create smooth user experiences.¿ ’®¿ ’∞q¿ ÷@/// The current selectable that contains the selection end edge.¿ ’Û¿ ’Ù¿ ÷¿ ÷ ¿ ÷&u¿ ÷|B/// The current selectable that contains the selection start edge.¿ ÷k¿ ÷l¿ ÷ô¿ ÷ö¿ ÷†¿ ÷´  ¿ ÷¿"¿ ÷Ã  ¿ ÷Ê¿ ÷Ò  ¿ ◊ ¿ ◊  ¿ ◊)&¿ ◊. ¿ ◊J¿ ◊S'¿ ◊X ¿ ◊u¿ ◊~!¿ ◊É ¿ ◊ö¿ ◊£+¿ ◊≥ ¿ ◊Ã¿ ◊Õ¿ ◊¿¿ ◊À¿ ◊¡¿ ◊”'¿ ◊ÿ ¿ ◊ı¿ Áﬁ|¿ Á ¿ Ë¿ Ë¿ Ë¿ ËY¿ Ë,¿ Ë"¿ Ë.¿ Ë?¿ Ë9¿ ËA¿ ËP¿ ËQ¿ Áù>¿ Áø   ¿ Áù¿ Áû¿ È¶Äﬁ¿ Í`Äâ/// The compare function this delegate used for determining the selection
/// order of the selectables.
///
/// Defaults to screen order.  ¿ Í8¿ Í9¿ ◊ˇÄ°¿ ÿ  ¿ ÿ¿ ÿ   ¿ ◊ˇ¿ ÿ ¿ ÿ§Äµ¿ ÿµ  ¿ ÿº¿ ÿ»  ¿ ÿ§¿ ÿ•¿ Ÿ]ÄÉ¿ Ÿ©D/// Notifies this delegate that layout of the container has changed.   ¿ Ÿ‰Åc¿ ŸÈ    ¿ €KÄü¿ €P    ¿ €Óâ(¿ €Û    ¿ ÂÅŸ¿ Â  ¿ Â1¿ Â=   ¿ Ê˜Ä¢¿ Á]@/// Called when this delegate finishes updating the selectables.  ¿ Á:¿ Á;¿ ÁG¿ ÁH¿ Ë_ÅC¿ Ë±J/// Updates the [value] in this class and notifies listeners if necessary.   ¿ ÍàÅÒ¿ Íå  ¿ Í†¿ Í¨  ¿ ÍÆ¿ Í∫   ¿ Ï}Çñ¿ ÌvÄ„/// Compares two rectangles in the screen order solely by their vertical
/// positions.
///
/// Returns positive if a is lower, negative if a is higher, 0 if their
/// order can't be determine solely by their vertical position. ¿ Ìâ¿ Ìè  ¿ Ìë¿ Ìó   ¿ ÔÇ ¿ ÔˇÄ‘/// Compares two rectangles in the screen order by their horizontal positions
/// assuming one of the rectangles enclose the other rect vertically.
///
/// Returns positive if a is lower, negative if a is higher. ¿ ¿   ¿ ¿ "   ¿ ÒÂÅn¿ ÒÍ    ¿ ÛWåb¿ Û∏?/// Gets the combined selection geometry for child selectables.  ¿ Ûô¿ Ûö¿±ÅT¿µ  ¿„¿Ë  ¿ı¿˙   ¿	Å¿  ¿+¿7  ¿C¿O  ¿	¿
¿,âi¿ÖÅG/// Pushes both handle layers to the selectables that contain selection edges.
///
/// This method needs to be called every time the selectables that contain the
/// selection edges change, i.e. [currentSelectionStartIndex] or
/// [currentSelectionEndIndex] changes. Otherwise, the handle may be painted
/// in the wrong place.   ¿ôÇâ¿Ì4/// Copies the selected contents of all selectables.  ¿–¿—¿&Åq¿r,/// Selects all contents of all selectables. ¿Ç¿õ  ¿U¿V¿õÖ¿a/// Selects a word in a selectable at the location
/// [SelectWordSelectionEvent.globalPosition]. ¿/¿I  ¿¿¿±Åv¿C/// Removes the selection of all selectables this delegate manages. ¿)¿>  ¿˜¿¯¿+Öª¿Ü;/// Extend current selection in a certain text granularity. ¿¶$¿∆  ¿i¿j¿Íàˇ¿E;/// Extend current selection in a certain text granularity. ¿h'¿ã  ¿(¿)¿&ÌÅ≥¿'- /// Updates the selection edges. ¿'G¿'a  ¿'¿'¿(§Ü∑¿(¿  ¿(◊¿(Á  ¿(§¿(•¿/_Å¿/p   ¿/_¿/`¿0gÅá¿1ƒÅ</// Ensures the selectable child has received up to date selection event.
///
/// This method is called when a new [Selectable] is added to the delegate,
/// and its screen location falls into the previous selection.
///
/// Subclasses are responsible for updating the selection of this newly added
/// [Selectable]. ¿1◊¿1„  ¿1≤¿1≥¿1ÚÅl¿2ŸÄ¡/// Dispatches a selection event to a specific selectable.
///
/// Override this method if subclasses need to generate additional events or
/// treatments prior to sending the selection events. ¿2˜¿3  ¿3¿3  ¿2º¿2Ω¿3bâ.¿5ÿÇO/// Initializes the selection of the selectable children.
///
/// The goal is to find the selectable child that contains the selection edge.
/// Returns [SelectionResult.end] if the selection edge ends on any of the
/// children. Otherwise, it returns [SelectionResult.previous] if the selection
/// does not reach any of its children. Returns [SelectionResult.next]
/// if the selection reaches the end of its children.
///
/// Ideally, this method should only be called twice at the beginning of the
/// drag selection, once for start edge update event, once for end edge update
/// event. ¿5Á¿6  ¿6¿6   ¿<îäj¿>Åe/// Adjusts the selection based on the drag selection update event if there
/// is already a selectable child that contains the selection edge.
///
/// This method starts by sending the selection event to the current
/// selectable that contains the selection edge, and finds forward or backward
/// if that selectable no longer contains the selection edge. ¿>'¿>A  ¿>H¿>W          ¿GÅg¿GÍÄﬂ/// Signature for a widget builder that builds a context menu for the given
/// [SelectableRegionState].
///
/// See also:
///
///  * [EditableTextContextMenuBuilder], which performs the same role for
///    [EditableText].  ¿H"¿H0  ¿H:+¿HQ    Ñ Ä¨Ñ ÑNÑ´Ñ;ÑMÑ<ÑRÑcÑdÑmÑ~ÑÑâÑöÑõ  àó <ÄÜÄ§Ä•ÄπÄ∫Ä‰ÅÅ5Å^ÅÜÅ∏ÅπÅ–ÅÂÇÇ"Ç?ÇZÇsÇìÇ¨Ç«ÇﬁÉÉ8É\ÉzÉ®É©É¡ÉËÉˇÑ ÑPÑkÑáÑ´ÑÆÑØÑÈÑÌÖ:ÖäÖ⁄Ü&ÜmÜΩÜ„ÜÁá6á`ádá¨á¯àEàìàóà√à«ââNâRâ£âÊäääPäöäÈã8ãâã◊åååXå¶åÏç<çZç^ç©ç›é!é0é4ébéfézé~éäéõéπéÛè0èIèçèßèÕêêMê\êiêtê}êÉêãêõêüê£ê»êÌëë0ëSëwëúë¬ëÚííIíuí¢í◊ìììì7ì;ìãìÕìÂìÈî3îÄî∑îªï
ïUï†ïøï√ï◊ñ#ñ@ñDñüñØñ≥ñ…ñÕóóióßó´óøòòQòUò¥òƒò»ôôaôÑôàôúôÍôÓöVöföjö¥õõVõ§õ®õµõπú
ú[úàúåúòú¸ùùùùVùÉù÷ùÒûAûèû®ûˆüCüsü°üßüı††2†A†^†{†††π° °°#°$°n°t°£°©°˙¢ ¢L¢á¢à¢∑¢‘¢’£££C£Y£Z£ô£Ÿ£⁄§#§2§8§Ç§¡§Ú§Û•#•_•`•¨•’•€¶+¶G¶M¶]¶c¶´¶Ìß>ßxß…ß˛®2®Ö®Œ©©F©n©õ©¢©€™™™i™Ø™¬™Ê™˘´´5´a´l´Ñ´£´≈´ˆ¨¨¨¨¨¨[¨]¨^¨Ç¨˘≠C≠Ü≠—Æ¢ØYØ˛∞≠±e≤≤≥≥o≥t≥u≥€¥¥9¥n¥°µµWµrµsµ”∂2∂3∂T∂}∂~∂À∂Û∂Ù∑ ∑∑,∑c∑Ü∑©∑«∏3∏k∏ó∏¡∏˛ππππππ@πcπàπ´π πŸπ¸∫∫>∫a∫q∫w∫x∫√ªª/ªUªcªiªîª∫ª˛ººº	ººJºpº£º‚ΩΩbΩÅΩâΩèΩìΩîΩﬁæ0æ4æ5æTæzæéæ÷æﬁæ˜æ˝øøUø[ø_ø`øÇø•øÊ¿ @¿ @,¿ @R¿ @õ¿ @™¿ @À¿ A	¿ A¿ A¿ Ai¿ Aë¿ A≤¿ Aø¿ A„¿ B¿ B	¿ B¿ B¿ B¿ B¿ BE¿ B±¿ C*¿ CV¿ Cg¿ Cõ¿ C«¿ Cı¿ D¿ DD¿ D|¿ DÖ¿ Då¿ Dê¿ Dë¿ D∏¿ E0¿ Eù¿ Eœ¿ E‡¿ F¿ F^¿ Fî¿ F≈¿ FŒ¿ F’¿ FŸ¿ F⁄¿ G¿ G@¿ GS¿ Gj¿ Gn¿ Go¿ G®¿ G‹¿ G‡¿ G·¿ H¿ H`¿ Hd¿ He¿ Hè¿ HÍ¿ I*¿ Ig¿ Im¿ Iq¿ Ir¿ Iß¿ I¡¿ IÁ¿ IÎ¿ IÏ¿ J/¿ JT¿ Jy¿ J¨¿ J¿¿ J‘¿ J˙¿ J˛¿ Jˇ¿ KL¿ K~¿ KÇ¿ KÉ¿ K¬¿ K‹¿ L¿ L¿ L¿ L>¿ Ly¿ Lû¿ L—¿ LÂ¿ M¿ M?¿ MC¿ MD¿ Mj¿ Mk¿ Må¿ M”¿ N¿ N¿ NK¿ NQ¿ N¢¿ NÛ¿ O%¿ OO¿ Oõ¿ OÍ¿ P9¿ PÅ¿ PÀ¿ PŸ¿ Pﬂ¿ Q¿ Q{¿ Q™¿ Qˆ¿ R'¿ R9¿ RC¿ Ru¿ Rü¿ R©¿ R∑¿ RΩ¿ R¿¿ R¡¿ RÔ¿ S2¿ SZ¿ SÄ¿ Så¿ Sµ¿ S⁄¿ T¿ TI¿ TS¿ T[¿ T`¿ TÉ¿ T§¿ T»¿ TÀ¿ TÃ¿ TÛ¿ U!¿ UC¿ UG¿ UH¿ Uk¿ U∂¿ UÈ¿ UÍ¿ V2¿ V8¿ Vâ¿ V⁄¿ W¿ W8¿ WÑ¿ W”¿ X"¿ Xj¿ X∏¿ X∆¿ XÃ¿ X˘¿ Yl¿ Yù¿ YÈ¿ Z¿ Z.¿ Z8¿ Zl¿ Zò¿ Z¢¿ Z∞¿ Z∂¿ Z∫¿ Zª¿ Z‰¿ [¿ [6¿ [:¿ [;¿ [a¿ [b¿ [ì¿ [¬¿ [√¿ \¿ \M¿ \N¿ \¨¿ \Û¿ ]W¿ ]X¿ ]ï¿ ]≥¿ ]Ë¿ ]¿ ]Ù¿ ]ı¿ ^?¿ ^ö¿ ^‰¿ _-¿ _∏¿ _‡¿ _·¿ ` ¿ `>¿ `s¿ `{¿ `¿ `Ä¿ `∆¿ a¿ ab¿ a©¿ b¿ b¿ bI¿ bg¿ bö¿ b¢¿ b¶¿ bß¿ bÔ¿ cF¿ cê¿ cŸ¿ d^¿ dÑ¿ dÖ¿ dƒ¿ d‚¿ e¿ e¿ e!¿ e"¿ eà¿ e‚¿ f=¿ fß¿ f”¿ f¸¿ gA¿ gL¿ gn¿ gw¿ gx¿ gî¿ g ¿ gË¿ h*¿ hv¿ h¿ hÉ¿ hÑ¿ hß¿ h—¿ hˆ¿ i¿ i
¿ iZ¿ i¶¿ i–¿ iË¿ j¿ jR¿ jë¿ j’¿ k¿ kF¿ kç¿ k ¿ l
¿ lL¿ lu¿ l£¿ l÷¿ lı¿ m¿ mE¿ mt¿ mü¿ m€¿ m‚¿ mÊ¿ mÁ¿ n
¿ n/¿ n=¿ nC¿ nm¿ nΩ¿ o	¿ o ¿ ol¿ o≠¿ oˆ¿ p5¿ pf¿ pj¿ pk¿ pé¿ pî¿ pﬂ¿ pÏ¿ q¿ q)¿ qQ¿ qd¿ qj¿ qk¿ qî¿ q®¿ qÆ¿ qØ¿ qŒ¿ qÙ¿ r¿ r	¿ r
¿ r2¿ r8¿ rÉ¿ r”¿ s ¿ s1¿ s7¿ sà¿ s≤¿ s¯¿ t¿ t¿ t¿ td¿ tØ¿ t˛¿ uJ¿ u\¿ up¿ uv¿ uw¿ uú¿ uΩ¿ u√¿ uƒ¿ u˜¿ v;¿ vc¿ vv¿ v|¿ v}¿ v£¿ v§¿ v»¿ v‡¿ w¿ wM¿ wV¿ w]¿ wn¿ wr¿ ws¿ w∂¿ wº¿ x
¿ x\¿ x§¿ x™¿ xÓ¿ y,¿ y2¿ y|¿ yÀ¿ z¿ z9¿ z?¿ zr¿ zx¿ z•¿ z´¿ zª¿ {¿ {G¿ {Ü¿ {Ã¿ |¿ |M¿ |d¿ |»¿ |÷¿ |‹¿ }¿ }-¿ }U¿ }[¿ }_¿ }`¿ }•¿ }´¿ }˘¿ ~K¿ ~ì¿ ~ô¿ ~ﬂ¿ ¿ #¿ m¿ º¿ Ä¿ Ä*¿ Ä0¿ Äc¿ Äi¿ Äñ¿ Äú¿ Ä¨¿ ÄÔ¿ Å4¿ Ås¿ Åπ¿ ÅÒ¿ Ç<¿ ÇS¿ Çπ¿ Ç«¿ ÇÕ¿ Ç˙¿ É"¿ ÉL¿ ÉR¿ ÉV¿ ÉW¿ Éå¿ Éí¿ Éﬂ¿ Ñ+¿ Ñw¿ Ñ}¿ Ñœ¿ Ñˆ¿ Ñ¸¿ Ö¿ ÖS¿ Öñ¿ Ö€¿ Ü¿ ÜR¿ ÜÉ¿ Ü∞¿ Ü ¿ á%¿ á)¿ á*¿ áU¿ á[¿ á©¿ áÏ¿ áÚ¿ à@¿ àê¿ àŸ¿ àÍ¿ â¿ â+¿ âP¿ âT¿ âU¿ âz¿ âï¿ âØ¿ â⁄¿ â˝¿ äC¿ äi¿ äm¿ än¿ äç¿ ä“¿ äÍ¿ ä¯¿ ä˛¿ ã@¿ ãD¿ ãE¿ ã|¿ ãÇ¿ ãí¿ ãò¿ ãÁ¿ å¿ åM¿ å}¿ åß¿ å›¿ åÊ¿ åÏ¿ ç6¿ çl¿ çà¿ ç≤¿ çÿ¿ é¿ é¿ é¿ é¿ é2¿ ék¿ éï¿ éª¿ é¡¿ é‹¿ è¿ è5¿ èÅ¿ è∫¿ è”¿ ê¿ ê-¿ ê:¿ ê|¿ êÇ¿ êÃ¿ ë¿ ë¿ ë¿ ë[¿ ëÜ¿ ë∏¿ ë∆¿ ëÃ¿ ëı¿ í¿ í5¿ íp¿ íí¿ íõ¿ í¢¿ í¶¿ íß¿ í—¿ í“¿ ì¿ ì9¿ ìG¿ ìM¿ ì£¿ ìÂ¿ î¿ îP¿ îó¿ ï?¿ ïh¿ ïë¿ ïπ¿ ñ!¿ ñL¿ ñU¿ ñ\¿ ñ`¿ ña¿ ñâ¿ ñä¿ ñ÷¿ ñˇ¿ ó¿ ó¿ ó¿ óo¿ óº¿ ò¿ òT¿ ò£¿ òπ¿ ô
¿ ô?¿ ôs¿ ôø¿ ö¿ öJ¿ öÄ¿ ö≥¿ ö∆¿ ö◊¿ öÓ¿ ö˜¿ õ¿ õ$¿ õ;¿ õD¿ õK¿ õO¿ õP¿ õç¿ õ≠¿ õÚ¿ õˆ¿ õ˜¿ ú2¿ úP¿ úì¿ úó¿ úò¿ úÁ¿ ù¿ ùk¿ ù∑¿ ù·¿ û3¿ ûÉ¿ û∫¿ ûﬂ¿ ü ¿ üc¿ ül¿ üy¿ üû¿ ü·¿ †"¿ †+¿ †1¿ †D¿ †H¿ †I¿ †q¿ †≥¿ †ﬂ¿ °¿ °¿ °%¿ °N¿ °á¿ °ã¿ °ó¿ °∑¿ °∏¿ °«¿ °¿ ¢)¿ ¢-¿ ¢9¿ ¢[¿ ¢\¿ ¢h¿ ¢ò¿ ¢æ¿ ¢’¿ ¢˝¿ £¿ £¿ £¿ £¿ £G¿ £^¿ £®¿ £⁄¿ £¿ §¿ §¿ §2¿ §6¿ §7¿ §F¿ §o¿ §®¿ §¨¿ §∏¿ §Ï¿ §˘¿ •¿ •¿ •¿ •$¿ •M¿ •Ü¿ •ä¿ •ñ¿ •ﬂ¿ •‡¿ •Ô¿ ¶¿ ¶Q¿ ¶U¿ ¶a¿ ¶≈¿ ¶∆¿ ¶’¿ ¶˛¿ ß7¿ ß;¿ ßG¿ ßz¿ ßç¿ ßë¿ ßí¿ ß°¿ ß ¿ ®¿ ®¿ ®¿ ®õ¿ ®ú¿ ®´¿ ®‘¿ ©¿ ©¿ ©¿ ©[¿ ©n¿ ©r¿ ©s¿ ©ó¿ ©ò¿ ©§¿ ©»¿ ©È¿ ™¿ ™=¿ ™å¿ ™ê¿ ™ë¿ ™ù¿ ™ƒ¿ ™Î¿ ´$¿ ´S¿ ´k¿ ´o¿ ´p¿ ´|¿ ´è¿ ´»¿ ´˜¿ ¨¿ ¨g¿ ¨°¿ ¨…¿ ¨Î¿ ≠	¿ ≠¿ ≠"¿ ≠#¿ ≠/¿ ≠V¿ ≠Å¿ ≠©¿ ≠¿¿ ≠‰¿ ≠ˇ¿ Æ¿ Æ¿ ÆL¿ Æc¿ Æl¿ Ær¿ Æò¿ Æ∑¿ Æÿ¿ Æˇ¿ Ø.¿ ØR¿ Øj¿ Øá¿ Øü¿ Øƒ¿ ØÌ¿ ∞¿ ∞¿ ∞ ¿ ∞)¿ ∞0¿ ∞4¿ ∞6¿ ∞7¿ ∞Ö¿ ∞â¿ ∞◊¿ ±(¿ ±<¿ ±ã¿ ±∆¿ ±«¿ ±”¿ ≤	¿ ≤*¿ ≤V¿ ≤\¿ ≤Ü¿ ≤ä¿ ≤å¿ ≤ç¿ ≤÷¿ ≤ˆ¿ ≤˜¿ ≥¿ ≥¿ ≥)¿ ≥t¿ ≥©¿ ≥≠¿ ≥Ø¿ ≥∞¿ ¥¿ ¥%¿ ¥&¿ ¥K¿ ¥L¿ ¥X¿ ¥ß¿ ¥∫¿ ¥æ¿ ¥¿¿ ¥¡¿ µ0¿ µ}¿ µ~¿ µ£¿ µ»¿ µ…¿ µ’¿ ∂¿ ∂Q¿ ∂U¿ ∂W¿ ∂X¿ ∂Œ¿ ∑ ¿ ∑!¿ ∑F¿ ∑k¿ ∑l¿ ∑x¿ ∑±¿ ∑’¿ ∏¿ ∏¿ ∏¿ ∏b¿ ∏f¿ ∏h¿ ∏i¿ ∏‚¿ π¿ π¿ π@¿ πA¿ πM¿ πÜ¿ π™¿ π‡¿ πÓ¿ πÙ¿ ∫-¿ ∫1¿ ∫3¿ ∫4¿ ∫ë¿ ∫“¿ ª¿ ª¿ ª@¿ ªl¿ ªm¿ ªy¿ ª†¿ ªœ¿ ª¸¿ º¿ º¿ º¿ ºN¿ ºz¿ º¬¿ Ω¿ Ω_¿ Ω“¿ Ωÿ¿ æ¿ æF¿ æï¿ æÿ¿ øE¿ øK¿ øO¿ øP¿ ø\¿ øü¿ ø‡¿ ¿¿ ¿E¿ ¿q¿ ¿w¿ ¿¡¿ ¿Ï¿ ¿ˇ¿ ¡¿ ¡¿ ¡9¿ ¡j¿ ¡v¿ ¡ª¿ ¡˝¿ ¬)¿ ¬t¿ ¬z¿ ¬§¿ ¬Î¿ ¬Ò¿ √¿ √/¿ √3¿ √4¿ √@¿ √Ñ¿ √ ¿ √Ó¿ ƒ¿ ƒ?¿ ƒl¿ ƒ¿ ƒÉ¿ ƒÑ¿ ƒê¿ ƒﬁ¿ ≈¿ ≈W¿ ≈d¿ ≈•¿ ≈´¿ ≈ﬁ¿ ≈‚¿ ≈„¿ ≈Ô¿ ∆¿ ∆&¿ ∆H¿ ∆]¿ ∆a¿ ∆b¿ ∆n¿ ∆Õ¿ ∆Á¿ «¿ «F¿ «n¿ «}¿ «™¿ «ÿ¿ » ¿ »¿ »4¿ »g¿ »ò¿ »ß¿ »–¿ »˙¿ …	¿ …B¿ …~¿ …Æ¿ …‹¿  ¿  ¿  ¿  \¿  `¿  a¿  m¿  †¿  ¸¿ ÀU¿ Àê¿ Àô¿ À≈¿ À˙¿ Ã¿ Ã=¿ ÃC¿ Ã£¿ Ã˛¿ Õ=¿ ÕF¿ Õt¿ Õ©¿ Õ±¿ ÕÏ¿ ÕÚ¿ Õˆ¿ Õ˜¿ Œ¿ Œ#¿ ŒW¿ Œx¿ Œ°¿ Œﬁ¿ ŒÈ¿ ŒÚ¿ Œ¯¿ œ.¿ œO¿ œz¿ œπ¿ œƒ¿ œÕ¿ œ”¿ –¿ –x¿ –‡¿ —¿ —¿ —¿ —	¿ —O¿ —S¿ —°¿ —Ó¿ “¿ “¿ “c¿ “°¿ ”¿ ”Q¿ ”Ç¿ ”É¿ ”–¿ ”‹¿ ”‚¿ ‘0¿ ‘Ä¿ ‘õ¿ ‘°¿ ‘Á¿ ’ ¿ ’&¿ ’k¿ ’≠¿ ’Æ¿ ’Ò¿ ’˛¿ ÷#¿ ÷$¿ ÷i¿ ÷v¿ ÷ù¿ ÷û¿ ÷æ¿ ÷‰¿ ◊¿ ◊&¿ ◊'¿ ◊Q¿ ◊|¿ ◊°¿ ◊–¿ ◊—¿ ◊¸¿ ◊˝¿ ÿ	¿ ÿ-¿ ÿ\¿ ÿ|¿ ÿù¿ ÿ°¿ ÿ¢¿ ÿÆ¿ ÿ’¿ ÿ˛¿ Ÿ¿ Ÿ¿ Ÿ5¿ ŸV¿ ŸZ¿ Ÿ[¿ Ÿ¢¿ ŸΩ¿ Ÿ›¿ Ÿ·¿ Ÿ‚¿ ⁄¿ ⁄.¿ ⁄W¿ ⁄£¿ ⁄Œ¿ ⁄‡¿ ⁄Í¿ €¿ €4¿ €>¿ €D¿ €H¿ €I¿ €g¿ €ã¿ €¨¿ €≈¿ €À¿ €Á¿ €Î¿ €Ï¿ ‹¿ ‹`¿ ‹û¿ ‹¿¿ ‹⁄¿ ‹ı¿ ›/¿ ›e¿ ›Ñ¿ ›È¿ ﬁ ¿ ﬁY¿ ﬁ¬¿ ﬁ˝¿ ﬂ1¿ ﬂ;¿ ﬂt¿ ﬂ¶¿ ﬂ∞¿ ﬂÌ¿ ‡	¿ ‡¿ ‡#¿ ‡$¿ ‡u¿ ‡ì¿ ‡‡¿ ·7¿ ·é¿ ·Ω¿ ·≈¿ ‚¿ ‚5¿ ‚N¿ ‚T¿ ‚å¿ ‚√¿ „ ¿ „S¿ „¢¿ „¿ ‰?¿ ‰ä¿ ‰º¿ ‰Ú¿ Â¿ Â¿ Â¿ ÂJ¿ Â§¿ Â€¿ Â¸¿ Ê)¿ ÊN¿ ÊT¿ ÊÉ¿ Ê™¿ Ê∞¿ Ê¿ ÊÙ¿ Êı¿ Á8¿ ÁE¿ ÁV¿ Áv¿ Áñ¿ Áö¿ Áõ¿ Áß¿ Á‹¿ Ë¿ Ë5¿ ËW¿ Ë\¿ Ë]¿ Ë™¿ ËŒ¿ È¿ È7¿ È\¿ Èu¿ È{¿ Èü¿ È£¿ È§¿ È¿ Í¿ Í¿ Í6¿ ÍC¿ ÍÖ¿ ÍÜ¿ Íæ¿ Í¿ Î¿ ÎF¿ ÎM¿ Î¿ Îù¿ Î’¿ Î‹¿ Ï¿ Ï,¿ ÏA¿ ÏG¿ Ïv¿ Ïz¿ Ï{¿ Ï∆¿ Ï◊¿ Ï›¿ Ì'¿ Ìi¿ Ìõ¿ Ó¿ Ók¿ Ó{¿ ÓÅ¿ Óº¿ Ó·¿ ÓÁ¿ Ô¿ Ô¿ Ô¿ Ôe¿ Ô≠¿ Ô≥¿ ÔÚ¿ &¿ å¿ £¿ ¥¿ ∫¿ Ò ¿ Ò7¿ ÒG¿ ÒM¿ Òä¿ Ò±¿ Ò∑¿ Òﬁ¿ Ò‚¿ Ò„¿ Ú¿ Ú_¿ Ú≠¿ Ú˜¿ Û¿ Û*¿ Û0¿ ÛP¿ ÛT¿ ÛU¿ Ûó¿ Û§¿ Û—¿ Û˚¿ Ù'¿ ÙF¿ Ùl¿ Ùå¿ Ù≤¿ Ùﬁ¿ ÙÁ¿ ÙÌ¿ ÙÓ¿ ı¿ ıg¿ ıã¿ ı≠¿ ı∂¿ ˆ¿ ˆ(¿ ˆL¿ ˆU¿ ˆ[¿ ˆ\¿ ˆî¿ ˆÈ¿ ˜C¿ ˜z¿ ˜‚¿ ¯¿ ¯R¿ ¯X¿ ¯Y¿ ¯y¿ ¯Æ¿ ˘¿ ˘~¿ ˘∂¿ ˘“¿ ˘˜¿ ˙¿ ˙\¿ ˙°¿ ˙¨¿ ˙¥¿ ˙∫¿ ˙ª¿ ˙Ò¿ ˚B¿ ˚u¿ ˚Ÿ¿ ¸¿ ¸C¿ ¸I¿ ¸g¿ ¸ò¿ ¸Î¿ ˝\¿ ˝î¿ ˝Æ¿ ˝—¿ ˝Ô¿ ˛0¿ ˛q¿ ˛|¿ ˛Ñ¿ ˛ä¿ ˛ã¿ ˛©¿ ˛–¿ ˛Û¿ ˇ¿ ˇD¿ ˇd¿ ˇó¿ ˇØ¿ ˇ∂¿ ˇ∫¿ ˇª¿ ¿ S¿ °¿ Ó¿=¿Z¿_¿Ø¿¿=¿g¿ª¿„¿È¿¿¿¿¿[¿ß¿µ¿ª¿‡¿¿%¿)¿*¿{¿Å¿“¿¿d¿~¿¶¿ﬂ¿¿Z¿¿¬¿˙¿Ñ¿¿Q¿î¿ö¿Ë¿	¿	1¿	o¿	ñ¿	û¿	»¿
¿
)¿
1¿
?¿
E¿
F¿
ì¿
œ¿
’¿¿X¿^¿_¿•¿¶¿Ë¿¿Q¿´¿π¿ø¿¿¿
¿L¿í¿ñ¿ó¿Œ¿⁄¿¿F¿}¿¬¿‹¿˙¿¿¿&¿9¿?¿o¿©¿“¿ÿ¿Ù¿¿¿#¿$¿S¿`¿£¿⁄¿¿¿<¿s¿î¿ò¿ô¿Œ¿ˇ¿¿Q¿ì¿¿M¿ú¿”¿ ¿b¿û¿Ó¿5¿K¿ì¿¿M¿W¿{¿É¿â¿™¿Æ¿Ø¿ı¿¿F¿}¿µ¿ª¿ﬁ¿¿$¿(¿)¿g¿t¿Œ¿"¿N¿i¿¨¿ª¿¿¿¿x¿’¿Ó¿ ¿w¿ë¿‚¿¿¿+¿Y¿ü¿π¿
¿:¿B¿H¿_¿ç¿ö¿ ¿–¿„¿Á¿Ë¿&¿3¿ì¿Á¿¿3¿g¿ó¿Ì¿˛¿ .¿ ]¿ †¿ ±¿ π¿ ø¿!¿!w¿!ñ¿!»¿"¿"O¿"p¿"é¿"¬¿"Í¿#6¿#E¿#x¿#Ñ¿#é¿#ù¿#À¿$¿$J¿$Ä¿$û¿$“¿$˙¿%E¿%T¿%á¿%ì¿%ù¿%¨¿%Ÿ¿&¿&6¿&E¿&K¿&b¿&ê¿&ù¿&Õ¿&”¿&Ê¿&Í¿&Î¿'¿'¿'i¿'£¿(¿("¿(ù¿(°¿(¢¿(Æ¿(Ô¿)9¿)w¿)≤¿)ÿ¿)ﬁ¿*¿*:¿*[¿*u¿*§¿*—¿*˝¿+L¿+[¿+Ä¿+¨¿+Ò¿, ¿,)¿,U¿,ô¿,®¿,“¿,˛¿-D¿-S¿-å¿-∑¿.¿.!¿.]¿.à¿.È¿.¯¿.˛¿/%¿/E¿/X¿/\¿/]¿/i¿/|¿/≥¿/ı¿/˚¿0#¿0K¿0`¿0d¿0e¿0±¿0∑¿1¿1F¿1L¿1ú¿1∞¿1Ω¿1Ô¿1¿2-¿23¿2Ç¿2∫¿2«¿3&¿3[¿3_¿3`¿3ú¿3¢¿3Û¿4@¿4í¿4€¿5¿5¿5h¿5π¿5∆¿6 ¿6á¿6û¿6¬¿6ﬂ¿77¿7k¿7¬¿7ﬂ¿8¿8%¿8A¿8R¿8t¿8ê¿8∏¿8‹¿8Ì¿9¿98¿9T¿9n¿9ù¿9©¿9”¿9‰¿:
¿:&¿:R¿:v¿:á¿:è¿:ï¿:ñ¿:∞¿:”¿:ˆ¿:¸¿;¿;8¿;E¿;r¿;x¿;ƒ¿<¿<b¿<ç¿<ë¿<í¿<‡¿=&¿=,¿=s¿=ƒ¿>¿>`¿>p¿>É¿>„¿>¯¿? ¿?b¿?u¿?¿?°¿?Û¿@¿@8¿@j¿@∂¿A¿A<¿AC¿Ag¿Aú¿A‹¿B¿Bm¿B ¿BÛ¿C¿C;¿C^¿Cè¿C†¿C√¿CÂ¿D ¿D/¿Dj¿Dù¿D∞¿DÃ¿DÁ¿DÛ¿E¿E+¿EM¿Eh¿Eó¿EΩ¿E¿F¿F ¿F;¿FG¿FX¿F`¿Ff¿Fw¿F¢¿FØ¿F‹¿F‚¿F˚¿Fˇ¿G¿G¿GN¿Gk¿Go¿G}¿GÅ¿GÀ¿G‚¿H ¿H8¿Hg¿Hj    _kLongPressSelectionDevicesSelectableRegionSelectableRegionState_NonOverrideAction_SelectAllAction_CopySelectionAction _GranularlyExtendSelectionAction%_GranularlyExtendCaretSelectionAction(_DirectionallyExtendCaretSelectionAction"_SelectableRegionContainerDelegate)MultiSelectableSelectionContainerDelegate ´ì